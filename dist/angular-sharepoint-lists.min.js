function $query(a,b){var c=function(){this.list=void 0,this.__columns=[],this.__type=void 0,this.__query=void 0,this.__limit=void 0,this.__serializer=void 0,this.__order=[],this.__data={},this.read=function(a){if(!angular.isUndefined(this.__type))throw"Cannot use read after another query type was selected";return this.__columns=a,this.__type="read",this},this.create=function(a){if(!angular.isUndefined(this.__type))throw"Cannot use create after another query type was selected";return this.__type="create",angular.isDefined(a)&&(this.__data=a),this},this.from=function(a){return this.list=a,this},this["in"]=function(a){return this.list=a,this},this.list=function(a){return this.list=a,this},this.update=function(a){if(!angular.isUndefined(this.__type))throw"Cannot use update after another query type was selected";return this.__type="update",angular.isDefined(a)&&(this.__data=a),this},this["delete"]=function(){if(!angular.isUndefined(this.__type))throw"Cannot use delete after another query type was selected";return this.__type="delete",this},this.where=function(a){angular.isDefined(this.__type)&&"create"===this.__type&&b.warn("where call is not necessary while creating entries");var c=function(a,b){var c=this,d=["beginsWith","contains","dateRangesOverlap","eq","equals","geq","greaterEquals","greater","in","includes","isNotNull","isNull","leq","lessEquals","less","neq","notEquals","notIncludes"];d.forEach(function(d){c[d]=function(c){return b.__query={comparator:d.toLowerCase(),column:a},angular.isDefined(c)&&(b.__query.value=c),b}})};return new c(a,this)},this.set=function(a,c){return angular.isDefined(this.__type)&&"create"!==this.__type&&"update"!==this.__type&&b.warn("set call is not necessary while reading/deleting entries"),this.__data[a]=c,this},this.value=function(a,c){return angular.isDefined(this.__type)&&"create"!==this.__type&&"update"!==this.__type&&b.warn("value call is not necessary while reading/deleting entries"),this.__data[a]=c,this},this["class"]=function(a){return angular.isDefined(this.__type)&&"delete"===this.__type&&b.warn("class call is not necessary while deleting entries"),this.__serializer=a,this},this.orderBy=function(a,c){return angular.isDefined(this.__type)&&"read"!==this.__type&&b.warn("orderBy call is not necessary while reading entries"),angular.isUndefined(c)&&(c=!0),this.__order.push({column:a,asc:c}),this},this.limit=function(a){return this.__limit=a,this},this.exec=function(){if(angular.isDefined(this.list)&&angular.isString(this.list)){var b={};if(!angular.isDefined(this.__type))throw"No Query Type specified";return b.type=this.__type,angular.isDefined(this.__columns)&&angular.isArray(this.__columns)&&this.__columns.length>0&&(b.columns=this.__columns),angular.isDefined(this.__query)&&(b.query=this.__query),angular.isDefined(this.__limit)&&(b.limit=this.__limit),angular.isDefined(this.__serializer)&&(b.serializer=this.__serializer),angular.isDefined(this.__order)&&angular.isArray(this.__order)&&this.__order.length>0&&(b.order=this.__order),angular.isDefined(this.__data)&&angular.isObject(this.__data)&&Object.getOwnPropertyNames(this.__data).length>0&&(b.data=this.__data),a.getList(this.list).query(b)}throw"No List specified"},this.then=function(a,b){return this.exec().then(a,b)}};return{create:function(a){return(new c).create(a)},read:function(a){return(new c).read(a)},update:function(a){return(new c).update(a)},"delete":function(){return(new c)["delete"]()}}}function $spList(a,b,c,d){function e(a){return new b(a)}function f(){var e;return e="JSOM"===a.getConnectionMode()?c.getLists():d.getLists(),e.then(function(a){var c=[];return a.forEach(function(a){c.push(new b(a))}),c})}var g={getList:e,getLists:f};return g}angular.module("ngSharepoint.Lists",["ngSharepoint"]),angular.module("ngSharepoint.Lists").factory("JSOMConnector",["$q","$sp",function(a,b){return{getLists:function(){return a(function(a,c){var d=b.getContext(),e=d.get_web().get_lists();d.load(e),d.executeQueryAsync(function(){for(var b=[],c=e.getEnumerator();c.moveNext();){var d=c.get_current();b.push(d)}a(b)},c)})}}}]),angular.module("ngSharepoint.Lists").factory("RESTConnector",["$q","$sp","$spLoader",function(a,b,c){return{getLists:function(){return a(function(a,b){})}}}]),angular.module("ngSharepoint.Lists").factory("JsomSPList",["$q","$sp","$spLoader","$spCamlParser",function(a,b,c,d){var e=function(a){this.title=a};return e.prototype.getGUID=function(){var d=this;return a(function(a,e){c.waitUntil("SP.Core").then(function(){var c=b.getContext(),f=c.get_web().get_lists().getByTitle(d.title);c.load(f),c.executeQueryAsync(function(){a(f.get_id().toString())},e)})})},e.prototype.getTitle=function(){var d=this;return a(function(a,e){c.waitUntil("SP.Core").then(function(){var c=b.getContext(),f=c.get_web().get_lists().getByTitle(d.title);c.load(f),c.executeQueryAsync(function(){a(f.get_title())},e)},e)})},e.prototype.setTitle=function(d){var e=this;return a(function(a,f){c.waitUntil("SP.Core").then(function(){var c=b.getContext(),g=c.get_web().get_lists().getByTitle(e.list);g.set_title(d),g.update(),c.executeQueryAsync(function(){e.title=d,a()},f)},f)})},e.prototype.getDescription=function(){var d=this;return a(function(a,e){c.waitUntil("SP.Core").then(function(){var c=b.getContext(),f=c.get_web().get_lists().getByTitle(d.title);c.load(f),c.executeQueryAsync(function(){a(f.get_description())},e)},e)})},e.prototype.setDescription=function(d){var e=this;return a(function(a,f){c.waitUntil("SP.Core").then(function(){var c=b.getContext(),g=c.get_web().get_lists().getByTitle(e.list);g.set_description(d),g.update(),c.executeQueryAsync(a,f)},f)})},e.prototype.readColumns=function(e){var f=this;return a(function(a,g){var h=d.parse(e).getViewFields();h.length<=0?c.waitUntil("SP.Core").then(function(){var c=b.getContext(),d=c.get_web().get_lists().getByTitle(f.title),e=d.get_fields();c.load(e,"Include(Title)"),c.executeQueryAsync(function(){for(var b=e.getEnumerator();b.moveNext();){var c=b.get_current();"BDC Identity"!==c.get_title()&&h.push(c.get_title())}a(h)},g)},g):a(h)})},e.prototype.read=function(d,e){var f=this;return a(function(a,g){f.readColumns(d).then(function(h){c.waitUntil("SP.Core").then(function(){var c=b.getContext(),i=c.get_web().get_lists().getByTitle(f.title),j=new SP.CamlQuery;j.set_viewXml(d);var k=i.getItems(j);c.load(k),c.executeQueryAsync(function(){for(var b=[],c=k.getEnumerator();c.moveNext();){var d=c.get_current();b.push(f.__unpack(d,h,e))}a(b)},function(a,b){g(b)})},g)})})},e.prototype.create=function(d,e){var f=this;return a(function(a,g){c.waitUntil("SP.Core").then(function(){var c=b.getContext(),h=c.get_web().get_lists().getByTitle(f.title),i=new SP.ListItemCreationInformation,j=h.addItem(i);f.__pack(j,d,e),j.update(),c.load(j),c.executeQueryAsync(function(){a(d)},function(a,b){g(b)})})})},e.prototype["delete"]=function(d){var e=this;return a(function(a,f){c.waitUntil("SP.Core").then(function(){var c=b.getContext(),g=c.get_web().get_lists().getByTitle(e.title),h=new SP.CamlQuery;h.set_viewXml(d);var i=g.getItems(h);c.load(i),c.executeQueryAsync(function(){for(var b=i.getEnumerator(),d=[];b.moveNext();){var e=b.get_current();d.push(e)}d.forEach(function(a){a.deleteObject()}),c.executeQueryAsync(function(b,c){a(c)},function(a,b){f(b)})},function(a,b){f(b)})})})},e.prototype.update=function(d,e,f){var g=this;return a(function(a,h){c.waitUntil("SP.Core").then(function(){var c=b.getContext(),i=c.get_web().get_lists().getByTitle(g.title),j=new SP.CamlQuery;j.set_viewXml(d);var k=i.getItems(j);c.load(k),c.executeQueryAsync(function(){for(var b=k.getEnumerator();b.moveNext();){var d=b.get_current();g.__pack(d,e,f),d.update()}c.executeQueryAsync(function(b,c){a(c)},function(a,b){h(b)})},function(a,b){h(b)})})})},e.prototype.__pack=function(a,b,c){angular.isDefined(c)&&(b=c.__serialize()),Object.getOwnPropertyNames(b).forEach(function(c){var d=b[c];angular.isDefined(d)&&null!==d&&angular.isString(d)&&(d=d.trim()),a.set_item(c,d)})},e.prototype.__unpack=function(a,b,c){var d={};return angular.isArray(b)||(b=Object.getOwnPropertyNames(b)),b.forEach(function(b){var c=a.get_item(b);angular.isDefined(c)&&null!==c&&angular.isString(c)&&(c=c.trim()),d[b]=c}),angular.isDefined(c)?c.__deserialize(d):d},e}]),angular.module("ngSharepoint.Lists").factory("RestSPList",["$q","$sp","$spLoader",function(a,b,c){var d=function(a){this.title=a};return d.prototype.read=function(b){var d="_api/web/Lists/GetByTitle('"+this.title+"')/Items",e={query:{__metadata:{type:"SP.CamlQuery"},ViewXml:b}};return a(function(a,b){c.query({method:"POST",url:d,data:e}).then(function(a){},b)})},d.prototype.create=function(b){var d="_api/web/Lists/GetByTitle('"+this.title+"')/items",e={__metadata:{type:"SP.Data.TestListItem"}};return Object.getOwnPropertyNames(b).forEach(function(a){var c=b[a];angular.isDefined(c)&&null!==c&&angular.isString(c)&&(c=c.trim()),e[a]=c}),a(function(a,b){c.query({method:"POST",url:d,data:e}).then(function(a){},b)})},d.prototype["delete"]=function(a){},d.prototype.update=function(a,b){},d}]),angular.module("ngSharepoint.Lists").factory("SPList",["$sp","$spLog","CamlBuilder","RestSPList","JsomSPList",function(a,b,c,d,e){var f=function(b){this.title=b,"JSOM"===a.getConnectionMode()?this.__list=new e(b):this.__list=new d(b)};return f.prototype.getGUID=function(){return this.__list.getGUID()["catch"](b.error)},f.prototype.getTitle=function(){return this.__list.getTitle()["catch"](b.error)},f.prototype.setTitle=function(a){return this.__list.setTitle(a)["catch"](b.error)},f.prototype.getDescription=function(){return this.__list.getDescription()["catch"](b.error)},f.prototype.setDescription=function(a){return this.__list.setDescription(a)["catch"](b.error)},f.prototype.create=function(a,c){return this.__list.create(a,c)["catch"](b.error)},f.prototype.read=function(a,c){return this.__list.read(a,c)["catch"](b.error)},f.prototype.update=function(a,c,d){return this.__list.update(a,c,d)["catch"](b.error)},f.prototype["delete"]=function(a){return this.__list["delete"](a)["catch"](b.error)},f.prototype.query=function(a){return angular.isObject(a)?this.__jsonQuery(a):void 0},f.prototype.__jsonQuery=function(a){if(!angular.isDefined(a.type))throw"Query Type is not defined";var b=new c;b.buildFromJson(a);var d;switch(b.isEmpty()||(d=b.build()),a.type){case"create":if(angular.isDefined(a.data))return this.create(a.data,a.serializer);throw"Query Data is not defined";case"read":return this.read(d,a.serializer);case"update":if(angular.isDefined(a.data))return this.update(d,a.data,a.serializer);throw"Query Data is not defined";case"delete":return this["delete"](d)}},f}]),angular.module("ngSharepoint.Lists").factory("$query",$query),$query.$inject=["$spList","$spLog"],describe("The $query Service",function(){var a,b,c,d;beforeEach(module("ngSharepoint.Lists")),beforeEach(function(){c={query:jasmine.createSpy()},b={getList:function(){return c}},spyOn(b,"getList").and.callThrough(),module(function(a){a.value("$spList",b)}),inject(function(b){a=b.get("$query"),d=b.get("$spLog"),spyOn(d,"error"),spyOn(d,"warn"),spyOn(d,"log")})}),it("reads from a list",function(){a.read().from("List").exec(),expect(b.getList).toHaveBeenCalledWith("List"),expect(c.query).toHaveBeenCalledWith({type:"read"})}),it("reads only specific columns from a list",function(){a.read(["Column1"]).from("List").exec(),expect(b.getList).toHaveBeenCalledWith("List"),expect(c.query).toHaveBeenCalledWith({type:"read",columns:["Column1"]})}),describe("reads only specific rows from a list",function(){it("where fields begin with",function(){a.read().from("List").where("Column1").beginsWith("Te").exec(),expect(b.getList).toHaveBeenCalledWith("List"),expect(c.query).toHaveBeenCalledWith({type:"read",query:{comparator:"beginswith",column:"Column1",value:"Te"}})}),it("where fields contain",function(){a.read().from("List").where("Column1").contains("es").exec(),expect(b.getList).toHaveBeenCalledWith("List"),expect(c.query).toHaveBeenCalledWith({type:"read",query:{comparator:"contains",column:"Column1",value:"es"}})}),it("where fields date ranges overlap",function(){var d=new Date;a.read().from("List").where("Column1").dateRangesOverlap(d).exec(),expect(b.getList).toHaveBeenCalledWith("List"),expect(c.query).toHaveBeenCalledWith({type:"read",query:{comparator:"daterangesoverlap",column:"Column1",value:d}})}),it("where fields are equal",function(){a.read().from("List").where("Column1").equals(4).exec(),expect(b.getList).toHaveBeenCalledWith("List"),expect(c.query).toHaveBeenCalledWith({type:"read",query:{comparator:"equals",column:"Column1",value:4}})}),it("where fields are greater equal",function(){a.read().from("List").where("Column1").greaterEquals(4).exec(),expect(b.getList).toHaveBeenCalledWith("List"),expect(c.query).toHaveBeenCalledWith({type:"read",query:{comparator:"greaterequals",column:"Column1",value:4}})}),it("where fields are greater",function(){a.read().from("List").where("Column1").greater(4).exec(),expect(b.getList).toHaveBeenCalledWith("List"),expect(c.query).toHaveBeenCalledWith({type:"read",query:{comparator:"greater",column:"Column1",value:4}})}),it("where fields are in",function(){a.read().from("List").where("Column1")["in"](["Value"]).exec(),expect(b.getList).toHaveBeenCalledWith("List"),expect(c.query).toHaveBeenCalledWith({type:"read",query:{comparator:"in",column:"Column1",value:["Value"]}})}),it("where fields include",function(){a.read().from("List").where("Column1").includes(4).exec(),expect(b.getList).toHaveBeenCalledWith("List"),expect(c.query).toHaveBeenCalledWith({type:"read",query:{comparator:"includes",column:"Column1",value:4}})}),it("where fields are not null",function(){a.read().from("List").where("Column1").isNotNull().exec(),expect(b.getList).toHaveBeenCalledWith("List"),expect(c.query).toHaveBeenCalledWith({type:"read",query:{comparator:"isnotnull",column:"Column1"}})}),it("where fields are null",function(){a.read().from("List").where("Column1").isNull().exec(),expect(b.getList).toHaveBeenCalledWith("List"),expect(c.query).toHaveBeenCalledWith({type:"read",query:{comparator:"isnull",column:"Column1"}})}),it("where fields are less equal",function(){a.read().from("List").where("Column1").lessEquals(4).exec(),expect(b.getList).toHaveBeenCalledWith("List"),expect(c.query).toHaveBeenCalledWith({type:"read",query:{comparator:"lessequals",column:"Column1",value:4}})}),it("where fields are less",function(){a.read().from("List").where("Column1").less(4).exec(),expect(b.getList).toHaveBeenCalledWith("List"),expect(c.query).toHaveBeenCalledWith({type:"read",query:{comparator:"less",column:"Column1",value:4}})}),it("where fields do not equal",function(){a.read().from("List").where("Column1").notEquals(4).exec(),expect(b.getList).toHaveBeenCalledWith("List"),expect(c.query).toHaveBeenCalledWith({type:"read",query:{comparator:"notequals",column:"Column1",value:4}})}),it("where fields do not include",function(){a.read().from("List").where("Column1").notIncludes(4).exec(),expect(b.getList).toHaveBeenCalledWith("List"),expect(c.query).toHaveBeenCalledWith({type:"read",query:{comparator:"notincludes",column:"Column1",value:4}})})}),it("reads only a certain amount of rows",function(){a.read().from("List").limit(42).exec(),expect(b.getList).toHaveBeenCalledWith("List"),expect(c.query).toHaveBeenCalledWith({type:"read",limit:42})}),it("reads from a list in a specific order",function(){a.read().from("List").orderBy("Column1").exec(),expect(b.getList).toHaveBeenCalledWith("List"),expect(c.query).toHaveBeenCalledWith({type:"read",order:[{column:"Column1",asc:!0}]})}),it("throws an exception when not specifying a list",function(){expect(function(){a.read().exec()}).toThrow("No List specified")}),it("can not execute read after another query",function(){expect(function(){a.create({Data:"Value"})["in"]("List").read().exec()}).toThrow("Cannot use read after another query type was selected")}),it("selects all columns when specifying an empty list",function(){a.read([]).from("List").exec(),expect(b.getList).toHaveBeenCalledWith("List"),expect(c.query).toHaveBeenCalledWith({type:"read"})}),it("creates a row in a list",function(){a.create({Data:"Value"})["in"]("List").exec(),expect(b.getList).toHaveBeenCalledWith("List"),expect(c.query).toHaveBeenCalledWith({type:"create",data:{Data:"Value"}})}),it("creates a row in a list",function(){a.create()["in"]("List").set("Data","Value").exec(),expect(b.getList).toHaveBeenCalledWith("List"),expect(c.query).toHaveBeenCalledWith({type:"create",data:{Data:"Value"}})}),it("creates a row in a list",function(){a.create()["in"]("List").value("Data","Value").exec(),expect(b.getList).toHaveBeenCalledWith("List"),expect(c.query).toHaveBeenCalledWith({type:"create",data:{Data:"Value"}})}),it("warns when calling where while creating a row",function(){a.create({Data:"Value"})["in"]("List").where("Data").equals("Value").exec(),expect(d.warn).toHaveBeenCalledWith("where call is not necessary while creating entries"),expect(b.getList).toHaveBeenCalledWith("List"),expect(c.query).toHaveBeenCalledWith({type:"create",data:{Data:"Value"},query:{comparator:"equals",column:"Data",value:"Value"}})}),it("can not execute read after another query",function(){expect(function(){a.read().from("List").create({Data:"Value"}).exec()}).toThrow("Cannot use create after another query type was selected")}),it("updates all rows in a list",function(){a.update({Data:"Value"})["in"]("List").exec(),expect(b.getList).toHaveBeenCalledWith("List"),expect(c.query).toHaveBeenCalledWith({type:"update",data:{Data:"Value"}})}),it("updates all rows in a list",function(){a.update()["in"]("List").set("Data","Value").exec(),expect(b.getList).toHaveBeenCalledWith("List"),expect(c.query).toHaveBeenCalledWith({type:"update",data:{Data:"Value"}})}),it("can not execute update after another query",function(){expect(function(){a.read().from("List").update({Data:"Value"}).exec()}).toThrow("Cannot use update after another query type was selected")}),it("deletes all rows from a list",function(){a["delete"]().from("List").exec(),expect(b.getList).toHaveBeenCalledWith("List"),expect(c.query).toHaveBeenCalledWith({type:"delete"})}),it("can not execute delete after another query",function(){expect(function(){a.create({Data:"Value"})["in"]("List")["delete"]().exec()}).toThrow("Cannot use delete after another query type was selected")})}),angular.module("ngSharepoint.Lists").factory("$spList",$spList),$spList.$inject=["$sp","SPList","JSOMConnector","RESTConnector"];